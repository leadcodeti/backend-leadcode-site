generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Site {
  id                   String   @id @default(uuid())
  createdAt            DateTime @default(now()) @map("created_at")
  homeId               String   @map("home_id")
  serviceSectionId     String?  @map("service_section_id")
  projectSectionId     String?  @map("project_section_id")
  testemonialSectionId String?  @map("testemonial_section_id")
  formSectionId        String?  @map("form_section_id")
  topFooterId          String?  @map("top_footer_id")
  bottomFooterId       String?  @map("bottom_footer_id")

  home               Home                @relation(fields: [homeId], references: [id])
  serviceSection     ServiceSection?     @relation(fields: [serviceSectionId], references: [id])
  projectSection     ProjectSection?     @relation(fields: [projectSectionId], references: [id])
  TestemonialSection TestemonialSection? @relation(fields: [testemonialSectionId], references: [id])
  formSection        FormSection?        @relation(fields: [formSectionId], references: [id])
  topFooter          TopFooter?          @relation(fields: [topFooterId], references: [id])
  bottomFooter       BottomFooter?       @relation(fields: [bottomFooterId], references: [id])

  @@map("sites")
}

model Home {
  id            String         @id @default(uuid())
  heroImage     String?        @map("hero_image")
  headline      String
  subheadline   String
  ctaButtonText String         @map("cta_button_text")
  headerId      String         @map("header_id")
  sites         Site[]
  techsCarousel TechCarousel[]
  createdAt     DateTime       @map("created_at")

  header Header @relation(fields: [headerId], references: [id])
  hero   Hero[]

  @@map("homes")
}

model Hero {
  key       String   @id
  name      String
  url       String
  size      Int
  homeId    String   @map("home_id")
  createdAt DateTime @map("created_at")

  home Home @relation(fields: [homeId], references: [id])

  @@map("heros")
}

model Header {
  id          String       @id @default(uuid())
  logo        String
  buttonText  String?      @map("button_text")
  headerLinks HeaderLink[]
  homes       Home[]
  createdAt   DateTime     @map("created_at")

  @@map("headers")
}

model HeaderLink {
  id         String   @id @default(uuid())
  name       String
  link       String
  isSelected Boolean  @map("is_selected")
  createdAt  DateTime @map("created_at")
  headerId   String   @map("header_id")

  header Header @relation(fields: [headerId], references: [id], onDelete: Cascade)

  @@map("header_links")
}

model TechCarousel {
  id         String   @id @default(uuid())
  image      String?
  name       String
  isSelected Boolean  @map("is_selected")
  createdAt  DateTime @map("created_at")
  homeId     String   @map("home_id")

  home              Home                @relation(fields: [homeId], references: [id])
  TechCarouselImage TechCarouselImage[]

  @@map("techs_carousel")
}

model TechCarouselImage {
  key            String   @id
  name           String
  url            String
  size           Int
  techCarouselId String   @map("tech_carousel_id")
  createdAt      DateTime @map("created_at")

  techCarousel TechCarousel @relation(fields: [techCarouselId], references: [id])

  @@map("tech_carousel_images")
}

model ServiceSection {
  id           String        @id @default(uuid())
  title        String
  description  String
  sites        Site[]
  serviceCards ServiceCard[]
  createdAt    DateTime      @map("created_at")

  @@map("services_sections")
}

model ServiceCard {
  id               String   @id @default(uuid())
  image            String
  title            String
  content          String
  isSelected       Boolean  @map("is_selected")
  createdAt        DateTime @map("created_at")
  serviceSectionId String   @map("service_section_id")

  ServiceSection   ServiceSection     @relation(fields: [serviceSectionId], references: [id])
  ServiceCardImage ServiceCardImage[]

  @@map("service_cards")
}

model ServiceCardImage {
  key           String   @id
  name          String
  url           String
  size          Int
  serviceCardId String   @map("service_card_id")
  createdAt     DateTime @map("created_at")

  serviceCard ServiceCard @relation(fields: [serviceCardId], references: [id])

  @@map("service_card_images")
}

model ProjectSection {
  id             String   @id @default(uuid())
  title          String
  description    String
  moreButtonText String   @map("more_button_text")
  sites          Site[]
  createdAt      DateTime @map("created_at")

  projectCards ProjectCard[]

  @@map("projects_sections")
}

model ProjectCard {
  id                 String   @id @default(uuid())
  name               String
  image              String?
  slug               String
  summaryDescription String   @map("summary_description")
  description        String
  productionUrl      String?  @map("production_url")
  behanceUrl         String?  @map("behance_url")
  category           String
  isSelected         Boolean  @map("is_selected")
  createdAt          DateTime @map("created_at")
  projectSectionId   String   @map("project_section_id")

  projectSection    ProjectSection      @relation(fields: [projectSectionId], references: [id])
  appliedTechnology AppliedTechnology[]
  functionality     Functionality[]
  ProjectCardImage  ProjectCardImage[]

  @@map("project_cards")
}

model ProjectCardImage {
  key           String   @id
  name          String
  url           String
  size          Int
  isCover       Boolean  @map("is_cover")
  projectCardId String   @map("project_card_id")
  createdAt     DateTime @map("created_at")

  projectCard ProjectCard @relation(fields: [projectCardId], references: [id])

  @@map("project_card_images")
}

model AppliedTechnology {
  id            String   @id @default(uuid())
  name          String
  projectCardId String   @map("project_card_id")
  createdAt     DateTime @map("created_at")

  projectCard ProjectCard @relation(fields: [projectCardId], references: [id])

  @@map("applied_technologies")
}

model Functionality {
  id            String   @id @default(uuid())
  name          String
  projectCardId String   @map("project_card_id")
  createdAt     DateTime @map("created_at")

  projectCard ProjectCard @relation(fields: [projectCardId], references: [id])

  @@map("functionalities")
}

model TestemonialSection {
  id          String        @id @default(uuid())
  title       String
  Testemonial Testemonial[]
  createdAt   DateTime      @map("created_at")

  site Site[]

  @@map("testemonials_sections")
}

model Testemonial {
  id                   String   @id @default(uuid())
  content              String
  clientAvatar         String   @map("client_avatar")
  clientName           String   @map("client_name")
  jobPosition          String?  @map("job_position")
  isSelected           Boolean  @map("is_selected")
  createdAt            DateTime @map("created_at")
  testemonialSectionId String   @map("testemonial_section_id")

  testemonialSection TestemonialSection @relation(fields: [testemonialSectionId], references: [id])
  ClientAvatar       ClientAvatar[]

  @@map("testemonials")
}

model ClientAvatar {
  key           String   @id
  name          String
  url           String
  size          Int
  testemonialId String   @map("testemonial_id")
  createdAt     DateTime @map("created_at")

  testemonial Testemonial @relation(fields: [testemonialId], references: [id])

  @@map("client_avatar")
}

model FormSection {
  id          String   @id @default(uuid())
  title       String
  description String
  createdAt   DateTime @map("created_at")

  sites     Site[]
  registers FormRegister[]

  @@map("form_sections")
}

model FormRegister {
  id                 String   @id @default(uuid())
  userName           String   @map("user_name")
  userEmail          String   @map("user_email")
  userPhone          String   @map("user_phone")
  projectDescription String   @map("project_description")
  areTermsAccepted   Boolean  @map("are_terms_accepted")
  createdAt          DateTime @map("created_at")
  formSectionId      String   @map("form_section_id")

  formSection FormSection @relation(fields: [formSectionId], references: [id])

  @@map("form_registers")
}

model TopFooter {
  id        String   @id @default(uuid())
  logo      String
  phone     String
  email     String
  createdAt DateTime @map("created_at")

  sites          Site[]
  topFooterLinks TopFooterLink[]
  topFooterLogo  TopFooterLogo[]

  @@map("top_footers")
}

model TopFooterLogo {
  key         String   @id
  name        String
  url         String
  size        Int
  topFooterId String   @map("top_footer_id")
  createdAt   DateTime @map("created_at")

  topFooter TopFooter @relation(fields: [topFooterId], references: [id])

  @@map("top_footer_logos")
}

model TopFooterLink {
  id          String   @id @default(uuid())
  icon        String?
  name        String
  isSelected  Boolean  @map("is_selected")
  createdAt   DateTime @map("created_at")
  topFooterId String   @map("top_footer_id")

  topFooter TopFooter @relation(fields: [topFooterId], references: [id])

  @@map("top_footer_links")
}

model BottomFooter {
  id            String   @id @default(uuid())
  logo          String?
  privacyPolicy String?  @map("privacy_policy")
  yarnLogoText  String?  @map("yarn_logo_text")
  createdAt     DateTime @map("created_at")

  sites        Site[]
  socialMedias SocialMedia[]

  @@map("bottom_footers")
}

model SocialMedia {
  id             String   @id @default(uuid())
  icon           String
  link           String
  isSelected     Boolean  @map("is_selected")
  bottomFooterId String   @map("bottom_footer_id")
  createdAt      DateTime @map("created_at")

  bottomFooter    BottomFooter      @relation(fields: [bottomFooterId], references: [id])
  SocialMediaIcon SocialMediaIcon[]

  @@map("social_medias")
}

model SocialMediaIcon {
  key           String   @id
  name          String
  url           String
  size          Int
  socialMediaId String   @map("social_media_id")
  createdAt     DateTime @map("created_at")

  socialMedia SocialMedia @relation(fields: [socialMediaId], references: [id])

  @@map("social_media_icons")
}
